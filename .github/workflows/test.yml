name: Test

on: push

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      API_SERVER_PORT: 8080
      API_ORIGIN: http://localhost:8080
      API_BASE_PATH: /api
    steps:
      - uses: actions/checkout@v2
      - name: setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - uses: actions/cache@v2
        id: client-yarn-cache
        with:
          path: 'node_modules'
          key: client-yarn-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v2
        id: server-yarn-cache
        with:
          path: 'server/node_modules'
          key: server-yarn-${{ hashFiles('server/yarn.lock') }}
      - name: Make envfile for cilent
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_DEBUG: false
          envkey_SOME_API_KEY: 'deploy_server_get_client_env'
          envkey_SECRET_KEY: ${{ secrets.ENV_FILE_PROD_CLIENT }}
          directory: ./
          fail_on_empty: true

      - name: Make envfile for server
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_DEBUG: false
          envkey_SOME_API_KEY: 'deploy_server_get_server_env'
          envkey_SECRET_KEY: ${{ secrets.ENV_FILE_PROD_SERVER }}
          directory: ./server
          fail_on_empty: true

      - name: Make envfile for database
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_DEBUG: 'prisma:engine'
          envkey_SOME_API_KEY: 'deploy_server_get_db_env'
          envkey_SECRET_KEY: ${{ secrets.ENV_FILE_PROD_DB }}
          directory: ./server/prisma
          fail_on_empty: true

      - run: yarn install
        if: steps.client-yarn-cache.outputs.cache-hit != 'true'
      - run: yarn install --cwd server
        if: steps.server-yarn-cache.outputs.cache-hit != 'true'
      - run: yarn run lint
      - run: yarn run typecheck
      - run: |
          yarn run migrate:dev
          yarn test
        env:
          API_JWT_SECRET: test_secret
